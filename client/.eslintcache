[{"C:\\Users\\camer\\Documents\\GitHub\\movie-pinger\\client\\src\\index.tsx":"1","C:\\Users\\camer\\Documents\\GitHub\\movie-pinger\\client\\src\\reportWebVitals.ts":"2","C:\\Users\\camer\\Documents\\GitHub\\movie-pinger\\client\\src\\App.tsx":"3","C:\\Users\\camer\\Documents\\GitHub\\movie-pinger\\client\\src\\Utils\\API.ts":"4","C:\\Users\\camer\\Documents\\GitHub\\movie-pinger\\client\\src\\Components\\MovieList.tsx":"5","C:\\Users\\camer\\Documents\\GitHub\\movie-pinger\\client\\src\\Components\\LoginBox.tsx":"6","C:\\Users\\camer\\Documents\\GitHub\\movie-pinger\\client\\src\\Components\\Footer.tsx":"7","C:\\Users\\camer\\Documents\\GitHub\\movie-pinger\\client\\src\\Components\\Navbar.tsx":"8","C:\\Users\\camer\\Documents\\GitHub\\movie-pinger\\client\\src\\Components\\Profile.tsx":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":1977,"mtime":1613011714857,"results":"13","hashOfConfig":"11"},{"size":2095,"mtime":1613011658363,"results":"14","hashOfConfig":"11"},{"size":710,"mtime":1612590571363,"results":"15","hashOfConfig":"11"},{"size":2661,"mtime":1613008480131,"results":"16","hashOfConfig":"11"},{"size":222,"mtime":1612991560975,"results":"17","hashOfConfig":"11"},{"size":396,"mtime":1613008955398,"results":"18","hashOfConfig":"11"},{"size":619,"mtime":1613011265050,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1tkfjtu",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"22"},"C:\\Users\\camer\\Documents\\GitHub\\movie-pinger\\client\\src\\index.tsx",[],["45","46"],"C:\\Users\\camer\\Documents\\GitHub\\movie-pinger\\client\\src\\reportWebVitals.ts",[],"C:\\Users\\camer\\Documents\\GitHub\\movie-pinger\\client\\src\\App.tsx",["47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64"],"import React, {useEffect, useState} from 'react';\nimport logo from './logo.svg';\nimport './App.scss';\nimport { MovieList } from \"./Components/MovieList\";\nimport {\n  addNewWatcher,\n  getAllWatchers,\n  getMovieByTitle,\n  getWatcherList,\n  loginWatcher,\n  pingWatcher,\n  searchByTitle\n} from \"./Utils/API\";\nimport {LoginBox} from \"./Components/LoginBox\";\nimport {Profile} from \"./Components/Profile\";\nimport {Footer} from \"./Components/Footer\";\nimport {Navbar} from \"./Components/Navbar\";\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\n\nclass Homepage extends React.Component {\n  render() {\n    return null;\n  }\n}\n\nfunction App() {\n  const [movie, setMovie] = useState<MovieInfo>({ Title: 'Yeah'} as MovieInfo);\n  const [search, setSearch] = useState<string>('');\n  const [results, setResults] = useState<MovieInfo[]>([]);\n  const [watchers, setWatchers] = useState<Watcher[]>([]);\n  const [token, setToken] = useState('');\n\n  const handleKeypress = (e: any) => {\n\n    console.log(e.code);\n    if(e.code === 'Enter')\n      handleSearch();\n  }\n\n  const handleSearch = () => {\n    searchByTitle(search, setResults);\n  }\n\n  return (\n    <div className=\"app\">\n      <BrowserRouter>\n        {/*<input className='searchBar' placeholder='Search for a movie...' value={search} onKeyPress={handleKeypress} onChange={(e) => setSearch(e.target.value)} />*/}\n        {/*<MovieList movies={results}/>*/}\n        {/*<button onClick={() => getAllWatchers(setWatchers)}>See All Users</button>*/}\n        {/*<ul>*/}\n        {/*  { watchers.map((i: Watcher) => <li>{i.uid}</li>)}*/}\n        {/*</ul>*/}\n        <Navbar/>\n        <div className=\"content\">\n          <Switch>\n            <Route path='/login' component={LoginBox}/>\n            <Route path='/watcher/:id' component={Profile}/>\n            <Route path='*'>\n              <Homepage/>\n            </Route>\n          </Switch>\n        </div>\n        <Footer/>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\camer\\Documents\\GitHub\\movie-pinger\\client\\src\\Utils\\API.ts",["65"],"\r\nexport const getMovieByTitle = (title: string, callback: (m: MovieInfo) => void) => {\r\n    fetch(`/movies/byTitle/${title}`).then((data) => data.json()).then((data: MovieInfo) => callback(\r\n        data));\r\n}\r\n\r\nexport const pingWatcher = (userid: number, movie: string) => {\r\n    fetch(`/watchers/pingWatcher?userid=${userid}&movie=${movie}`, {\r\n        method: 'POST'\r\n    }).then((data) => data.json()).then((data) => console.log(data));\r\n}\r\n\r\nexport const searchByTitle = (title: string, callback: (m: MovieInfo[]) => void) => {\r\n    fetch(`/api/v1/search/${title}`).then((data) => data.json()).then((data: any) => { console.log(data); callback(data.Search as MovieInfo[])});\r\n}\r\n\r\nexport const addNewWatcher = (username: string, password: string, callback: (d: any) => void, email?: string) => {\r\n    fetch(`/watchers/addNewWatcher?user=${username}&pass=${password}${email ? `&email=${email}` : ''}`, {\r\n        method: 'POST'\r\n    })\r\n        .then((data) => data.json()).then((data) => callback(data));\r\n}\r\n\r\nexport const getWatcherList = (userid: string, callback: (d: MovieInfo[]) => void) => {\r\n    fetch(`/watchers/watcherList?user=${userid}`)\r\n        .then((data) => data.json()).then((data) => console.log(data));\r\n}\r\n\r\nexport const getAllWatchers = (callback: (w: Watcher[]) => void) => {\r\n    fetch(`/watchers/allWatchers`)\r\n        .then((data) => data.json()).then((data) => callback(data));\r\n}\r\n\r\nexport const loginWatcher = (userid: string, password: string, callback: (d: any) => void) => {\r\n    fetch(`/auth/login?userid=${userid}&pass=${password}`)\r\n        .then((data) => data.json()).then((data) => callback(data));\r\n};\r\n\r\nexport const testAuth = () => {\r\n    fetch(`/auth/test?token=${sessionStorage.getItem('authtoken')}`)\r\n        .then((data) => data.json()).then((data) => console.log(data));\r\n}\r\n\r\nexport const getProfileData = async (id: string, callback: (d: any) => void) => {\r\n    // get list\r\n    // seperate into each\r\n    // get user data\r\n    let list: MovieInfo[];\r\n    console.log('getting');\r\n\r\n    await getWatcherList(id, (d) => console.log(d));\r\n}","C:\\Users\\camer\\Documents\\GitHub\\movie-pinger\\client\\src\\Components\\MovieList.tsx",[],["66","67"],"C:\\Users\\camer\\Documents\\GitHub\\movie-pinger\\client\\src\\Components\\LoginBox.tsx",["68","69","70","71"],"import React, {useState} from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Button } from \"antd\";\r\nimport {addNewWatcher, loginWatcher, testAuth} from \"../Utils/API\";\r\nimport './LoginBox.scss';\r\n\r\nexport const LoginBox = () => {\r\n    const [showLogin, setShowLogin] = useState(true);\r\n    const [errMsg, setErrMsg] = useState('');\r\n    const { register, handleSubmit, watch, errors} = useForm();\r\n\r\n    const receiveLogin = (data: any) => {\r\n        if(data.reason) {\r\n            setErrMsg(data.reason);\r\n        }\r\n\r\n        if(!data.token)\r\n            return;\r\n\r\n        sessionStorage.setItem('authtoken', data.token);\r\n\r\n        testAuth();\r\n    };\r\n\r\n    const receiveAccount = (data: any) => {\r\n\r\n    }\r\n\r\n    const onLogin = (data: any) => loginWatcher(data.userField, data.passField, receiveLogin);\r\n    const onCreateAccount = (data: any) => addNewWatcher(data.userField, data.passField, receiveAccount)\r\n\r\n    return (\r\n        <div className='loginBox'>\r\n            <h1>Movie Pinger</h1>\r\n            {showLogin && <form className='loginForm' onSubmit={handleSubmit(onLogin)}>\r\n                <input type=\"text\" name='userField' ref={register({required: true})}/>\r\n                {errors.userField && <span>Username is required</span>}\r\n                <input type='password' name='passField' ref={register({required: true})}/>\r\n                {errors.passField && <span>Password is required</span>}\r\n                <Button>Login</Button>\r\n            </form>}\r\n            {!showLogin && <form className='createForm' onSubmit={handleSubmit(onCreateAccount)}>\r\n                <input type=\"text\" name='userField' placeholder='username' ref={register({required: true})}/>\r\n                {errors.userField && <span>Username is required</span>}\r\n                <input type='password' name='passField' placeholder='password' ref={register({required: true})}/>\r\n                {errors.passField && <span>Password is required</span>}\r\n                <input type='password' name='confirmPassField' placeholder='confirm password' ref={register({required: true})}/>\r\n                <Button>Create Account</Button>\r\n            </form>}\r\n            <div className='boxFooter'>\r\n                <img src={process.env.PUBLIC_URL + '/chevron.svg'} className='btnChevron left'/>\r\n                {showLogin && <p onClick={() => setShowLogin(false)} className='accBtn'>Create Account</p>}\r\n                {!showLogin && <p onClick={() => setShowLogin(true)} className='accBtn'>Login</p>}\r\n                <img src={process.env.PUBLIC_URL + '/chevron.svg'} className='btnChevron right'/>\r\n            </div>\r\n        </div>\r\n    );\r\n}",["72","73"],"C:\\Users\\camer\\Documents\\GitHub\\movie-pinger\\client\\src\\Components\\Footer.tsx",[],"C:\\Users\\camer\\Documents\\GitHub\\movie-pinger\\client\\src\\Components\\Navbar.tsx",[],"C:\\Users\\camer\\Documents\\GitHub\\movie-pinger\\client\\src\\Components\\Profile.tsx",["74","75","76","77","78"],"import React, {useEffect, useState} from 'react';\r\nimport {\r\n    Route,\r\n    Link,\r\n    useRouteMatch,\r\n    useParams,\r\n    RouteComponentProps\r\n} from \"react-router-dom\";\r\nimport './Profile.scss';\r\nimport {getProfileData} from \"../Utils/API\";\r\n\r\ntype Params = { id: string};\r\n\r\nexport const Profile = ({ match }: RouteComponentProps<Params>) => {\r\n\r\n    const [userdata, setUserdata] = useState<ProfileData>();\r\n\r\n    useEffect(() => {\r\n        getProfileData(match.params.id, setUserdata);\r\n    }, []);\r\n\r\n    return (\r\n        <div className='profile'>\r\n            <h1>{userdata?.uid}</h1>\r\n        </div>\r\n    )\r\n}",{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":1,"column":16,"nodeType":"85","messageId":"86","endLine":1,"endColumn":25},{"ruleId":"83","severity":1,"message":"87","line":2,"column":8,"nodeType":"85","messageId":"86","endLine":2,"endColumn":12},{"ruleId":"83","severity":1,"message":"88","line":4,"column":10,"nodeType":"85","messageId":"86","endLine":4,"endColumn":19},{"ruleId":"83","severity":1,"message":"89","line":6,"column":3,"nodeType":"85","messageId":"86","endLine":6,"endColumn":16},{"ruleId":"83","severity":1,"message":"90","line":7,"column":3,"nodeType":"85","messageId":"86","endLine":7,"endColumn":17},{"ruleId":"83","severity":1,"message":"91","line":8,"column":3,"nodeType":"85","messageId":"86","endLine":8,"endColumn":18},{"ruleId":"83","severity":1,"message":"92","line":9,"column":3,"nodeType":"85","messageId":"86","endLine":9,"endColumn":17},{"ruleId":"83","severity":1,"message":"93","line":10,"column":3,"nodeType":"85","messageId":"86","endLine":10,"endColumn":15},{"ruleId":"83","severity":1,"message":"94","line":11,"column":3,"nodeType":"85","messageId":"86","endLine":11,"endColumn":14},{"ruleId":"83","severity":1,"message":"95","line":27,"column":10,"nodeType":"85","messageId":"86","endLine":27,"endColumn":15},{"ruleId":"83","severity":1,"message":"96","line":27,"column":17,"nodeType":"85","messageId":"86","endLine":27,"endColumn":25},{"ruleId":"83","severity":1,"message":"97","line":28,"column":18,"nodeType":"85","messageId":"86","endLine":28,"endColumn":27},{"ruleId":"83","severity":1,"message":"98","line":29,"column":10,"nodeType":"85","messageId":"86","endLine":29,"endColumn":17},{"ruleId":"83","severity":1,"message":"99","line":30,"column":10,"nodeType":"85","messageId":"86","endLine":30,"endColumn":18},{"ruleId":"83","severity":1,"message":"100","line":30,"column":20,"nodeType":"85","messageId":"86","endLine":30,"endColumn":31},{"ruleId":"83","severity":1,"message":"101","line":31,"column":10,"nodeType":"85","messageId":"86","endLine":31,"endColumn":15},{"ruleId":"83","severity":1,"message":"102","line":31,"column":17,"nodeType":"85","messageId":"86","endLine":31,"endColumn":25},{"ruleId":"83","severity":1,"message":"103","line":33,"column":9,"nodeType":"85","messageId":"86","endLine":33,"endColumn":23},{"ruleId":"83","severity":1,"message":"104","line":48,"column":9,"nodeType":"85","messageId":"86","endLine":48,"endColumn":26},{"ruleId":"79","replacedBy":"105"},{"ruleId":"81","replacedBy":"106"},{"ruleId":"83","severity":1,"message":"107","line":9,"column":12,"nodeType":"85","messageId":"86","endLine":9,"endColumn":18},{"ruleId":"83","severity":1,"message":"108","line":10,"column":37,"nodeType":"85","messageId":"86","endLine":10,"endColumn":42},{"ruleId":"109","severity":1,"message":"110","line":51,"column":17,"nodeType":"111","endLine":51,"endColumn":97},{"ruleId":"109","severity":1,"message":"110","line":54,"column":17,"nodeType":"111","endLine":54,"endColumn":98},{"ruleId":"79","replacedBy":"112"},{"ruleId":"81","replacedBy":"113"},{"ruleId":"83","severity":1,"message":"114","line":3,"column":5,"nodeType":"85","messageId":"86","endLine":3,"endColumn":10},{"ruleId":"83","severity":1,"message":"115","line":4,"column":5,"nodeType":"85","messageId":"86","endLine":4,"endColumn":9},{"ruleId":"83","severity":1,"message":"116","line":5,"column":5,"nodeType":"85","messageId":"86","endLine":5,"endColumn":18},{"ruleId":"83","severity":1,"message":"117","line":6,"column":5,"nodeType":"85","messageId":"86","endLine":6,"endColumn":14},{"ruleId":"118","severity":1,"message":"119","line":20,"column":8,"nodeType":"120","endLine":20,"endColumn":10,"suggestions":"121"},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","'MovieList' is defined but never used.","'addNewWatcher' is defined but never used.","'getAllWatchers' is defined but never used.","'getMovieByTitle' is defined but never used.","'getWatcherList' is defined but never used.","'loginWatcher' is defined but never used.","'pingWatcher' is defined but never used.","'movie' is assigned a value but never used.","'setMovie' is assigned a value but never used.","'setSearch' is assigned a value but never used.","'results' is assigned a value but never used.","'watchers' is assigned a value but never used.","'setWatchers' is assigned a value but never used.","'token' is assigned a value but never used.","'setToken' is assigned a value but never used.","'handleKeypress' is assigned a value but never used.","'list' is defined but never used.",["122"],["123"],"'errMsg' is assigned a value but never used.","'watch' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["122"],["123"],"'Route' is defined but never used.","'Link' is defined but never used.","'useRouteMatch' is defined but never used.","'useParams' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["124"],"no-global-assign","no-unsafe-negation",{"desc":"125","fix":"126"},"Update the dependencies array to be: [match.params.id]",{"range":"127","text":"128"},[500,502],"[match.params.id]"]