[{"C:\\Users\\camer\\Documents\\GitHub\\movie-pinger\\client\\src\\index.tsx":"1","C:\\Users\\camer\\Documents\\GitHub\\movie-pinger\\client\\src\\reportWebVitals.ts":"2","C:\\Users\\camer\\Documents\\GitHub\\movie-pinger\\client\\src\\App.tsx":"3","C:\\Users\\camer\\Documents\\GitHub\\movie-pinger\\client\\src\\Utils\\API.ts":"4","C:\\Users\\camer\\Documents\\GitHub\\movie-pinger\\client\\src\\Components\\MovieList.tsx":"5","C:\\Users\\camer\\Documents\\GitHub\\movie-pinger\\client\\src\\Components\\LoginBox.tsx":"6","C:\\Users\\camer\\Documents\\GitHub\\movie-pinger\\client\\src\\Components\\Footer.tsx":"7","C:\\Users\\camer\\Documents\\GitHub\\movie-pinger\\client\\src\\Components\\Navbar.tsx":"8","C:\\Users\\camer\\Documents\\GitHub\\movie-pinger\\client\\src\\Components\\Profile.tsx":"9","C:\\Users\\camer\\Documents\\GitHub\\movie-pinger\\client\\src\\Components\\Homepage.tsx":"10"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":1096,"mtime":1613065543233,"results":"14","hashOfConfig":"12"},{"size":3408,"mtime":1613075339117,"results":"15","hashOfConfig":"12"},{"size":762,"mtime":1613075810163,"results":"16","hashOfConfig":"12"},{"size":3057,"mtime":1613067690670,"results":"17","hashOfConfig":"12"},{"size":222,"mtime":1612991560975,"results":"18","hashOfConfig":"12"},{"size":395,"mtime":1613075560718,"results":"19","hashOfConfig":"12"},{"size":1589,"mtime":1613075782113,"results":"20","hashOfConfig":"12"},{"size":1184,"mtime":1613075887651,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1tkfjtu",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\camer\\Documents\\GitHub\\movie-pinger\\client\\src\\index.tsx",[],["46","47"],"C:\\Users\\camer\\Documents\\GitHub\\movie-pinger\\client\\src\\reportWebVitals.ts",[],"C:\\Users\\camer\\Documents\\GitHub\\movie-pinger\\client\\src\\App.tsx",["48","49","50","51","52","53","54","55","56","57","58","59"],"import React, {useEffect, useState} from 'react';\nimport logo from './logo.svg';\nimport './App.scss';\nimport { MovieList } from \"./Components/MovieList\";\nimport {\n  addNewWatcher,\n  getAllWatchers,\n  getMovieByTitle,\n  getWatcherList,\n  loginWatcher,\n  pingWatcher,\n  searchByTitle\n} from \"./Utils/API\";\nimport {Homepage} from \"./Components/Homepage\";\nimport {LoginBox} from \"./Components/LoginBox\";\nimport {Profile} from \"./Components/Profile\";\nimport {Footer} from \"./Components/Footer\";\nimport {Navbar} from \"./Components/Navbar\";\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\n\nfunction App() {\n  const [token, setToken] = useState('');\n\n  return (\n    <div className=\"app\">\n      <BrowserRouter>\n        <Navbar/>\n        <div className=\"content\">\n          <Switch>\n            <Route path='/login' component={LoginBox}/>\n            <Route path='/watcher/:id' component={Profile}/>\n            <Route path='*'>\n              <Homepage/>\n            </Route>\n          </Switch>\n        </div>\n        <Footer/>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\camer\\Documents\\GitHub\\movie-pinger\\client\\src\\Utils\\API.ts",[],"C:\\Users\\camer\\Documents\\GitHub\\movie-pinger\\client\\src\\Components\\MovieList.tsx",[],"C:\\Users\\camer\\Documents\\GitHub\\movie-pinger\\client\\src\\Components\\LoginBox.tsx",["60","61","62","63"],"import React, {useState} from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Button } from \"antd\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport {addNewWatcher, loginWatcher, testAuth} from \"../Utils/API\";\r\nimport './LoginBox.scss';\r\n\r\nexport const LoginBox = () => {\r\n    const [showLogin, setShowLogin] = useState(true);\r\n    const [errMsg, setErrMsg] = useState('');\r\n    const { register, handleSubmit, watch, errors} = useForm();\r\n    const history = useHistory();\r\n\r\n    const receiveLogin = (data: any) => {\r\n        if(data.reason) {\r\n            setErrMsg(data.reason);\r\n        }\r\n\r\n        if(!data.token)\r\n            return;\r\n\r\n        sessionStorage.setItem('authtoken', data.token);\r\n        sessionStorage.setItem('uniqueid', data.id);\r\n        sessionStorage.setItem('username', data.userid);\r\n\r\n        testAuth();\r\n\r\n        history.push(`/watcher/${data.id}`);\r\n    };\r\n\r\n    const receiveAccount = (data: any) => {\r\n\r\n    }\r\n\r\n    const onLogin = (data: any) => loginWatcher(data.userField, data.passField, receiveLogin);\r\n    const onCreateAccount = (data: any) => addNewWatcher(data.userField, data.passField, receiveAccount)\r\n\r\n    return (\r\n        <div className='loginBox'>\r\n            <h1>Movie Pinger</h1>\r\n            {console.log(errors)}\r\n            {showLogin && <form className='loginForm' onSubmit={handleSubmit(onLogin)}>\r\n                <input type=\"text\" name='userField' placeholder='Username' ref={register({required: true})}/>\r\n                {errors.userField && <span>Username is required</span>}\r\n                <input type='password' name='passField' placeholder='Password' ref={register({required: true})}/>\r\n                {errors.passField && <span>Password is required</span>}\r\n                <Button onClick={handleSubmit(onLogin)}>Login</Button>\r\n            </form>}\r\n            {!showLogin && <form className='createForm' onSubmit={handleSubmit(onCreateAccount)}>\r\n                <input type=\"text\" name='userField' placeholder='Username' ref={register({required: true})}/>\r\n                {errors.userField && <span>Username is required</span>}\r\n                <input type='password' name='passField' placeholder='Password' ref={register({required: true})}/>\r\n                {errors.passField && <span>Password is required</span>}\r\n                <input type='password' name='confirmPassField' placeholder='Confirm Password' ref={register({required: true})}/>\r\n                <Button onClick={handleSubmit(onCreateAccount)}>Create Account</Button>\r\n            </form>}\r\n            <div className='boxFooter'>\r\n                <img src={process.env.PUBLIC_URL + '/chevron.svg'} className='btnChevron left'/>\r\n                {showLogin && <p onClick={() => setShowLogin(false)} className='accBtn'>Create Account</p>}\r\n                {!showLogin && <p onClick={() => setShowLogin(true)} className='accBtn'>Login</p>}\r\n                <img src={process.env.PUBLIC_URL + '/chevron.svg'} className='btnChevron right'/>\r\n            </div>\r\n        </div>\r\n    );\r\n}","C:\\Users\\camer\\Documents\\GitHub\\movie-pinger\\client\\src\\Components\\Footer.tsx",[],"C:\\Users\\camer\\Documents\\GitHub\\movie-pinger\\client\\src\\Components\\Navbar.tsx",[],"C:\\Users\\camer\\Documents\\GitHub\\movie-pinger\\client\\src\\Components\\Profile.tsx",["64","65","66","67","68"],"import React, {useEffect, useState} from 'react';\r\nimport {\r\n    Route,\r\n    Link,\r\n    useRouteMatch,\r\n    useParams,\r\n    RouteComponentProps, useHistory\r\n} from \"react-router-dom\";\r\nimport './Profile.scss';\r\nimport {getProfileData, pingWatcher} from \"../Utils/API\";\r\nimport {Button, Input} from \"antd\";\r\nimport {MovieList} from \"./MovieList\";\r\n\r\ntype Params = { id: string};\r\n\r\nexport const Profile = ({ match }: RouteComponentProps<Params>) => {\r\n\r\n    const [userdata, setUserdata] = useState<ProfileData>({\r\n        id: '',\r\n        uid: '',\r\n        recList: [],\r\n        recCounts: [],\r\n        toWatch: []\r\n    });\r\n    const [recID, setRecID] = useState<string>('');\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if(match.params.id === 'self') {\r\n            const token = sessionStorage.getItem('authtoken');\r\n            if(!token) history.push('/login');\r\n\r\n            const id = sessionStorage.getItem('uniqueid') || '';\r\n            if(!id) history.push('/login');\r\n\r\n            getProfileData(id, setUserdata);\r\n        }\r\n        getProfileData(match.params.id, setUserdata);\r\n    }, []);\r\n\r\n    return (\r\n        <div className='profile'>\r\n            <h1>Profile</h1>\r\n            <h1>{userdata?.uid}</h1>\r\n            <Input onChange={(e) => setRecID(e.target.value)} />\r\n            <Button onClick={() => pingWatcher(match.params.id, recID)}>Recommend to Watcher</Button>\r\n            <MovieList title='Will Watch' movies={userdata?.toWatch}/>\r\n            <MovieList title='Should Watch' movies={userdata.recList}/>\r\n        </div>\r\n    )\r\n}","C:\\Users\\camer\\Documents\\GitHub\\movie-pinger\\client\\src\\Components\\Homepage.tsx",["69","70"],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":1,"column":16,"nodeType":"77","messageId":"78","endLine":1,"endColumn":25},{"ruleId":"75","severity":1,"message":"79","line":2,"column":8,"nodeType":"77","messageId":"78","endLine":2,"endColumn":12},{"ruleId":"75","severity":1,"message":"80","line":4,"column":10,"nodeType":"77","messageId":"78","endLine":4,"endColumn":19},{"ruleId":"75","severity":1,"message":"81","line":6,"column":3,"nodeType":"77","messageId":"78","endLine":6,"endColumn":16},{"ruleId":"75","severity":1,"message":"82","line":7,"column":3,"nodeType":"77","messageId":"78","endLine":7,"endColumn":17},{"ruleId":"75","severity":1,"message":"83","line":8,"column":3,"nodeType":"77","messageId":"78","endLine":8,"endColumn":18},{"ruleId":"75","severity":1,"message":"84","line":9,"column":3,"nodeType":"77","messageId":"78","endLine":9,"endColumn":17},{"ruleId":"75","severity":1,"message":"85","line":10,"column":3,"nodeType":"77","messageId":"78","endLine":10,"endColumn":15},{"ruleId":"75","severity":1,"message":"86","line":11,"column":3,"nodeType":"77","messageId":"78","endLine":11,"endColumn":14},{"ruleId":"75","severity":1,"message":"87","line":12,"column":3,"nodeType":"77","messageId":"78","endLine":12,"endColumn":16},{"ruleId":"75","severity":1,"message":"88","line":22,"column":10,"nodeType":"77","messageId":"78","endLine":22,"endColumn":15},{"ruleId":"75","severity":1,"message":"89","line":22,"column":17,"nodeType":"77","messageId":"78","endLine":22,"endColumn":25},{"ruleId":"75","severity":1,"message":"90","line":10,"column":12,"nodeType":"77","messageId":"78","endLine":10,"endColumn":18},{"ruleId":"75","severity":1,"message":"91","line":11,"column":37,"nodeType":"77","messageId":"78","endLine":11,"endColumn":42},{"ruleId":"92","severity":1,"message":"93","line":58,"column":17,"nodeType":"94","endLine":58,"endColumn":97},{"ruleId":"92","severity":1,"message":"93","line":61,"column":17,"nodeType":"94","endLine":61,"endColumn":98},{"ruleId":"75","severity":1,"message":"95","line":3,"column":5,"nodeType":"77","messageId":"78","endLine":3,"endColumn":10},{"ruleId":"75","severity":1,"message":"96","line":4,"column":5,"nodeType":"77","messageId":"78","endLine":4,"endColumn":9},{"ruleId":"75","severity":1,"message":"97","line":5,"column":5,"nodeType":"77","messageId":"78","endLine":5,"endColumn":18},{"ruleId":"75","severity":1,"message":"98","line":6,"column":5,"nodeType":"77","messageId":"78","endLine":6,"endColumn":14},{"ruleId":"99","severity":1,"message":"100","line":39,"column":8,"nodeType":"101","endLine":39,"endColumn":10,"suggestions":"102"},{"ruleId":"75","severity":1,"message":"103","line":9,"column":12,"nodeType":"77","messageId":"78","endLine":9,"endColumn":17},{"ruleId":"75","severity":1,"message":"104","line":9,"column":19,"nodeType":"77","messageId":"78","endLine":9,"endColumn":27},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","'MovieList' is defined but never used.","'addNewWatcher' is defined but never used.","'getAllWatchers' is defined but never used.","'getMovieByTitle' is defined but never used.","'getWatcherList' is defined but never used.","'loginWatcher' is defined but never used.","'pingWatcher' is defined but never used.","'searchByTitle' is defined but never used.","'token' is assigned a value but never used.","'setToken' is assigned a value but never used.","'errMsg' is assigned a value but never used.","'watch' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Route' is defined but never used.","'Link' is defined but never used.","'useRouteMatch' is defined but never used.","'useParams' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'match.params.id'. Either include them or remove the dependency array.","ArrayExpression",["107"],"'movie' is assigned a value but never used.","'setMovie' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"108","fix":"109"},"Update the dependencies array to be: [history, match.params.id]",{"range":"110","text":"111"},[1126,1128],"[history, match.params.id]"]